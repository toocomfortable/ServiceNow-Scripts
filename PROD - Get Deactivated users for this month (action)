(function execute(inputs, outputs) {
    // ... code ...
    var entries = [];
    var users = [];
    var sysarray = [];
    var i = 0;
    gr_syslog = new GlideRecord('syslog');
    gr_syslog.addEncodedQuery("messageSTARTSWITHExternalAuth: provider_user_map is de-activated for user^sys_created_by=azuresamlsync^sys_created_onBETWEENjavascript:gs.beginningOfLastMonth()@javascript:gs.endOfThisMonth()");

    gr_syslog.query();
    while (gr_syslog.next()) {
        var messages = gr_syslog.message;
        var msgstr = messages.toString();
        var sysid = msgstr.slice(57, 89);
        var date = gr_syslog.sys_created_on;
        sysarray.push(sysid.toString());
        //sysarray.push(date.getDisplayValue());

        //var sln = msgstr.length;
        //gs.print(sysid);
        var entry = {};
        //entry.msg = sysid + " " + date;
        //user.lastname = date;
        entries[i] = entry;
        entry.msg = sysid + " " + date;
        i += 1;
    }

    for (var a = 0; a < sysarray.length; a++) {
        var deactuser = sysarray[a];
        gr_sys_user = new GlideRecord('sys_user');
        gr_sys_user.addQuery('sys_id', deactuser.toString()); //query the sys_id and the value from the first query. this is not working.
        gr_sys_user.query();
        if (gr_sys_user.next()) {
            var user = {}
            user.firstname = gr_sys_user.first_name.toString();
            user.lastname = gr_sys_user.last_name.toString();
            user.login = gr_sys_user.u_login_id.toString();
            user.userid = gr_sys_user.sys_id.toString();
            users.push(user);
        }

        var combinedarray = entries.map(function (obj, index) {
            return [obj, users[index]];
        });

        var arrayOfStrings = combinedarray.map(function (arr) {
            return arr.map(function (obj) {
                return JSON.stringify(obj);
            }).join('\n');
        });

    }
    outputs.entries = entries;
    outputs.users = users;
    outputs.combinedarray = arrayOfStrings.join('\n\n');
}
)(inputs, outputs);
